{"version":3,"sources":["index.js"],"names":["Translator","dotenv","config","ReactGA","initialize","pageview","window","location","pathname","search","GoogleTranslate","process","Obfs","props","that","state","inputText","translation","translatedText","languages","SupportedLanguages","key","text","value","translationChain","getSupportedLanguages","e","b","setState","error","error_body","JSON","parse","body","map","x","item","language","name","onChange","bind","translate","onSubmit","clearTimeout","this","stableTimer","timeoutTimer","setTimeout","onStable","target","preventDefault","nextTranslation","languageList","newLanguage","length","push","langLength","i","randLangIndex","Math","floor","random","randLanguage","err","chain","step","console","className","Header","message","LanguageDropdown","color","onClick","addLanguage","LangaugeChain","placeholder","primary","floated","randomTen","href","React","Component","_","data","options","find","o","onChangeResult","fluid","selection","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7c97ada.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport dotenv from 'dotenv';\nimport GoogleTranslate from 'google-translate';\nimport ReactGA from 'react-ga';\n\nimport {\n    Dropdown,\n    Button,\n    Container,\n    TextArea,\n    Form,\n    Message,\n} from 'semantic-ui-react';\n\ndotenv.config();\n\nReactGA.initialize('UA-79437382-4');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nlet Translator;\n\nif (process.env.NODE_ENV === 'development') {\n    Translator = GoogleTranslate(process.env.REACT_APP_GOOGLE_API_KEY_DEVL, {})\n} else {\n    Translator = GoogleTranslate(process.env.REACT_APP_GOOGLE_API_KEY_PROD, {})\n}\n\nfunction translateForDropdown(item) {\n    return {\n        key: item.language,\n        text: item.name,\n        value: item.name\n    }\n}\n\nclass Obfs extends React.Component {\n    constructor(props) {\n        super(props);\n        var that = this;\n\n        this.state = {\n            inputText: \"\",\n            translation: \"\",\n            translatedText: \"\",\n            languages: [\"en\"],\n            SupportedLanguages: [{ key: \"af\", text: \"Afrikaans\", value: \"Afrikaans\" }],\n            translationChain: []\n        };\n\n        Translator.getSupportedLanguages(\"en\", function (e, b) {\n            if (!e) {\n                that.setState({\n                    SupportedLanguages: b.map(x => translateForDropdown(x))\n                });\n            } else {\n                that.setState({\n                    error: true,\n                    error_body: JSON.parse(e.body).error\n                })\n            }\n        });\n\n        this.onChange = this.onChange.bind(this);\n        this.translate = this.translate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        // this.translate(this.state.inputText, this.state.languages[this.state.languages.length-1]);\n    }\n\n    onChange(e) {\n        clearTimeout(this.state.stableTimer)\n        var timeoutTimer = setTimeout(this.onStable.bind(this, e.target.name), 1000);\n        this.setState({\n            [e.target.name]: e.target.value,\n            stableTimer: timeoutTimer\n        });\n\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        clearTimeout(this.state.stableTimer)\n        this.translate(this.state.inputText)\n        return false;\n    }\n\n    onStable(name) {\n        if (name === \"inputText\") {\n            this.translate(this.state.inputText)\n        }\n    }\n\n    translate(text) {\n        if (text) {\n            this.setState({\n                translatedText: this.state.inputText\n            });\n            this.nextTranslation(text, this.state.languages, 0);\n        }\n    }\n\n    addLanguage() {\n        var languageList = this.state.languages\n        if (this.state.newLanguage) {\n            if (languageList[languageList.length - 1] !== this.state.newLanguage)\n                languageList.push(this.state.newLanguage)\n            this.setState({\n                languages: languageList\n            });\n        }\n    }\n\n    randomTen() {\n        let languageList = []\n        this.setState({\n            languages: languageList\n        })\n        let langLength = this.state.SupportedLanguages.length;\n        for(var i = 0; i < 9; i++) {\n            let randLangIndex = Math.floor(Math.random(0) * langLength)\n            let randLanguage = this.state.SupportedLanguages[randLangIndex]\n            languageList.push(randLanguage.key)\n        }\n        languageList.push(\"en\");\n        this.setState({\n            languages: languageList\n        })\n    }\n\n    nextTranslation(text, languageList, i) {\n        var that = this;\n        if (i > languageList.length) {\n            return \"done\"\n        }\n        Translator.translate(text, languageList[i], function (err, translation) {\n            if (err) {\n                console.error(err.body);\n            } else {\n                var chain = that.state.translationChain;\n                chain.push(translation.translatedText);\n                that.setState({\n                    translatedText: translation.translatedText,\n                    translationChain: chain,\n                    step: i\n                });\n                return that.nextTranslation(translation.translatedText, languageList, i + 1)\n            }\n        });\n    }\n\n    render() {\n        return (<div>\n            <Container className=\"primary\">\n            <br />\n            <h1>Translate <span>Obfuscate</span></h1>\n            <br />\n            {\n                this.state.error &&\n                <Message error>\n                    <Message.Header>Error</Message.Header>\n                    <p>There has been an error loading the backend service. {this.state.error_body.message}</p>\n                </Message>\n            }\n            <Form>\n                <Container className=\"translationContent\">\n                    <div className=\"utility-bar\">\n                        <div className=\"language-select-container\">\n                            <LanguageDropdown name=\"newLanguage\" value={this.state.newLanguage} onChange={this.onChange} languages={this.state.SupportedLanguages} />\n                            <Button color={\"#DA3E52\"} onClick={this.addLanguage.bind(this)} className=\"add-language-button\">Add</Button>\n                        </div>\n                        <LangaugeChain languages={this.state.languages} step={this.state.step}></LangaugeChain>\n                    </div>\n                    <div className=\"headerRow\">\n                        <div className=\"leftHeader\">\n                            Input\n                        </div>\n                        <div className=\"rightHeader\">\n                            Output\n                        </div>\n                        <div className=\"leftContent\">\n                            <TextArea name=\"inputText\" placeholder=\"Input Text\" value={this.state.inputText} onChange={this.onChange} />\n                        </div>\n                        <div className=\"rightContent\">\n                            <TextArea name=\"outputText\" value={this.state.translatedText} />\n                        </div>\n                    </div>\n                </Container>\n                <br />\n                <br />\n                <Button primary floated=\"right\" onClick={this.onSubmit}>Translate</Button>\n                <Button primary floated=\"left\" onClick={this.randomTen.bind(this)}>Random 10</Button>\n                <br />\n            </Form>\n        </Container>\n        <Container className=\"footer\">\n        <p>Made by <a href=\"https://brennanmcdonald.ca\">Brennan McDonald</a> - 2020</p>\n        </Container>\n        </div>)\n    }\n}\n\nclass LanguageDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(_, data) {\n        var { value } = data;\n        var { key } = data.options.find(o => o.value === value)\n        var onChangeResult = {\n            target: {\n                name: this.props.name,\n                value: key\n            }\n        }\n        this.props.onChange(onChangeResult)\n    }\n\n    render() {\n        return (\n            <Dropdown\n                className=\"language-dropdown\"\n                placeholder='Select Language'\n                fluid\n                search\n                selection\n                onChange={this.onChange}\n                options={this.props.languages}\n            />\n        )\n    }\n}\n\nclass LangaugeChain extends React.Component {\n    render() {\n        return (\n            <div className=\"ribbon-container\">\n                {\n                    this.props.languages.map((x, i) => {\n                        if (i === this.props.step) {\n                            return <div key={Math.random()} className=\"ribbon current\">{x}</div>\n                        } else {\n                            return <div key={Math.random()} className=\"ribbon\">{x}</div>\n                        }\n                    })\n                }\n\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<Obfs />, document.getElementById(\"root\"))"],"sourceRoot":""}