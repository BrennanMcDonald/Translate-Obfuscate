{"version":3,"sources":["index.js"],"names":["dotenv","config","ReactGA","initialize","pageview","window","location","pathname","search","Translator","GoogleTranslate","Obfs","props","that","state","inputText","translation","translatedText","languages","SupportedLanguages","translationChain","getSupportedLanguages","_","b","setState","map","x","key","item","language","text","name","value","onChange","bind","translate","onSubmit","e","clearTimeout","this","stableTimer","timeoutTimer","setTimeout","onStable","target","preventDefault","nextTranslation","alert","languageList","i","console","log","length","err","chain","push","step","error","body","className","LanguageChainer","primary","floated","onClick","React","Component","LanguageDropdown","data","options","find","o","onChangeResult","placeholder","fluid","selection","LangaugeChain","class","newLanguage","addLanguage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca75394e.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport dotenv from 'dotenv';\nimport GoogleTranslate from 'google-translate';\nimport ReactGA from 'react-ga';\n\nimport {\n    Dropdown,\n    Button,\n    Container,\n    TextArea,\n    Form,\n} from 'semantic-ui-react';\n\ndotenv.config();\n\nReactGA.initialize('UA-79437382-4');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst Translator = GoogleTranslate(\"AIzaSyDdHaxMLvjblyat6PN3wk5u6TV0Dplj41Y\", {})\n\nfunction translateForDropdown(item) {\n    return {\n        key: item.language,\n        text: item.name,\n        value: item.name\n    }\n}\n\nclass Obfs extends React.Component {\n    constructor(props) {\n        super(props);\n        var that = this;\n\n        this.state = {\n            inputText: \"\",\n            translation: \"\",\n            translatedText: \"\",\n            languages: [\"en\"],\n            SupportedLanguages: [],\n            translationChain: []\n        };\n\n        Translator.getSupportedLanguages(\"en\", function (_, b) {\n            that.setState({\n                SupportedLanguages: b.map(x => translateForDropdown(x))\n            });\n        });\n\n        this.onChange = this.onChange.bind(this);\n        this.translate = this.translate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        // this.translate(this.state.inputText, this.state.languages[this.state.languages.length-1]);\n    }\n\n    onChange(e) {\n        clearTimeout(this.state.stableTimer)\n        var timeoutTimer = setTimeout(this.onStable.bind(this, e.target.name), 1000);\n        this.setState({\n            [e.target.name]: e.target.value,\n            stableTimer: timeoutTimer\n        });\n\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        clearTimeout(this.state.stableTimer)\n        this.translate(this.state.inputText)\n        return false;\n    }\n\n    onStable(name) {\n        if (name === \"inputText\") {\n            this.translate(this.state.inputText)\n        }\n    }\n\n    translate(text) {\n        if (text) {\n            this.setState({\n                translatedText: this.state.inputText\n            })\n            this.nextTranslation(text, this.state.languages, 0);\n\n        }\n        else\n            alert(\"No text entered\")\n    }\n\n    nextTranslation(text, languageList, i) {\n        var that = this;\n        console.log(i, languageList.length)\n        if (i > languageList.length) {\n            return \"done\"\n        }\n        Translator.translate(text, languageList[i], function (err, translation) {\n            console.log(i)\n            if (err) {\n                console.error(err.body);\n            } else {\n                var chain = that.state.translationChain;\n                chain.push(translation.translatedText);\n                that.setState({\n                    translatedText: translation.translatedText,\n                    translationChain: chain,\n                    step: i\n                });\n                console.log(that.state)\n\n                return that.nextTranslation(translation.translatedText, languageList, i + 1)\n            }\n        });\n    }\n\n    render() {\n        return (<Container>\n            <br />\n            <br />\n            {this.state.translation} <br />\n            <Form>\n                <Container className=\"translationContent\">\n                    <LanguageChainer languages={this.state.SupportedLanguages} onChange={this.onChange} step={this.state.step} />\n                    <div className=\"headerRow\">\n                        <div className=\"leftHeader\">\n                            Input\n                        </div>\n                        <div className=\"rightHeader\">\n                            Output\n                        </div>\n                        <div className=\"leftContent\">\n                            <TextArea name=\"inputText\" value={this.state.inputText} onChange={this.onChange} />\n                        </div>\n                        <div className=\"rightContent\">\n                            <TextArea name=\"outputText\" value={this.state.translatedText} />\n                        </div>\n                    </div>\n                </Container>\n                <br />\n                <br />\n                <Button primary floated=\"right\" onClick={this.onSubmit}>Translate</Button>\n                <br />\n            </Form>\n        </Container>)\n    }\n}\n\nclass LanguageDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(_, data) {\n        var { value } = data;\n        var { key } = data.options.find(o => o.value === value)\n        var onChangeResult = {\n            target: {\n                name: this.props.name,\n                value: key\n            }\n        }\n        this.props.onChange(onChangeResult)\n    }\n\n    render() {\n        return (\n            <Dropdown\n                placeholder='Select Language'\n                fluid\n                search\n                selection\n                onChange={this.onChange}\n                options={this.props.languages}\n            />\n        )\n    }\n}\n\nclass LangaugeChain extends React.Component {\n    render() {\n        return (\n            <table>\n                <thead>\n                    <tr class=\"ribbon-container\">\n                        {\n                            this.props.languages.map((x, i) => {\n                                if (i === this.props.step) {\n                                    return <th key={x} className=\"ribbon current\">{x}</th>\n                                } else {\n                                    return <th key={x} className=\"ribbon\">{x}</th>\n                                }\n                            })\n                        }\n                    </tr>\n                </thead>\n            </table>\n        )\n    }\n\n}\n\nclass LanguageChainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            languages: [\"en\"],\n            newLanguage: \"\"\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.addLanguage = this.addLanguage.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    addLanguage() {\n        var languageList = this.state.languages\n        if (this.state.newLanguage !== \"\") {\n            if (languageList[languageList.length - 1] !== this.state.newLanguage)\n                languageList.push(this.state.newLanguage)\n            this.setState({\n                languages: languageList\n            });\n            var onChangeResult = {\n                target: {\n                    name: 'languages',\n                    value: this.state.languages\n                }\n            }\n            this.props.onChange(onChangeResult)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <LangaugeChain languages={this.state.languages} step={this.props.step}></LangaugeChain>\n                <br />\n                <LanguageDropdown name=\"newLanguage\" value={this.state.newLanguage} onChange={this.onChange} languages={this.props.languages} />\n                <Button onClick={this.addLanguage} floated=\"right\">+</Button>\n                <br />\n                <br />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<Obfs />, document.getElementById(\"root\"))"],"sourceRoot":""}